apply plugin: 'com.android.library'


android {
    signingConfigs {

    }

    dexOptions {
        preDexLibraries = false
    }

    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]
    defaultConfig {
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
//        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {main {res.srcDirs = ['src/main/res', 'src/main/res-night']}}
    buildToolsVersion '28.0.3'
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')

    ///support
    api(rootProject.ext.dependencies["support-v4"]) {
        exclude module: 'support-annotations'
    }
    api(rootProject.ext.dependencies["appcompat-v7"]) {
        exclude module: 'support-annotations'
        exclude module: 'support-v4'
    }
    api(rootProject.ext.dependencies["design"]) {
        exclude module: 'support-annotations'
        exclude module: 'appcompat-v7'
        exclude module: 'support-v4'
    }
    api rootProject.ext.dependencies["annotations"]

    //view
    api(rootProject.ext.dependencies["butterknife"]) {
        exclude module: 'support-annotations'
    }

    //rx
    api rootProject.ext.dependencies["rxjava2"]
    api(rootProject.ext.dependencies["rxandroid2"]) {
        exclude module: 'rxjava'
    }
    api(rootProject.ext.dependencies["rxlifecycle2"]) {
        exclude module: 'rxjava'
        exclude module: 'jsr305'
    }
    api(rootProject.ext.dependencies["rxlifecycle2-android"]) {
        exclude module: 'support-annotations'
        exclude module: 'rxjava'
        exclude module: 'rxandroid'
        exclude module: 'rxlifecycle'
    }
    api(rootProject.ext.dependencies["rxpermissions2"]) {
        exclude module: 'rxjava'
        exclude module: 'support-annotations'
    }
    api rootProject.ext.dependencies['rxerrorhandler2']

    //network
    api(rootProject.ext.dependencies["retrofit"]) {
        exclude module: 'okhttp'
        exclude module: 'okio'
    }
    api(rootProject.ext.dependencies["retrofit-converter-gson"]) {
        exclude module: 'gson'
        exclude module: 'okhttp'
        exclude module: 'okio'
        exclude module: 'retrofit'
    }
    api(rootProject.ext.dependencies["retrofit-adapter-rxjava2"]) {
        exclude module: 'rxjava'
        exclude module: 'okhttp'
        exclude module: 'retrofit'
        exclude module: 'okio'
    }
    api rootProject.ext.dependencies["okhttp3"]
    api(rootProject.ext.dependencies["glide"]) {
        exclude module: 'support-v4'
    }
    annotationProcessor(rootProject.ext.dependencies["glide-compiler"]) {
        exclude module: 'jsr305'
    }

    //tools
    compileOnly rootProject.ext.dependencies["javax.annotation"]
    api rootProject.ext.dependencies["dagger2"]
    annotationProcessor rootProject.ext.dependencies["dagger2-compiler"]
    api rootProject.ext.dependencies["gson"]
    //url切换
    api rootProject.ext.dependencies["retrofit-url-manager"]
    implementation rootProject.ext.dependencies["lifecyclemodel"]

    api rootProject.ext.dependencies["SmartRefreshLayout"]
//    api rootProject.ext.dependencies["SmartRefreshHeader"]
    api rootProject.ext.dependencies["BaseRecyclerViewAdapterHelper"]


    api rootProject.ext.dependencies["rxlifecycle2"]
    api rootProject.ext.dependencies["rxlifecycle2-components"]

    api rootProject.ext.dependencies["arouter"]

    api rootProject.ext.dependencies["litepal"]

    //流布局
    api rootProject.ext.dependencies["flexbox"]

    //dex分包
    implementation rootProject.ext.dependencies["multidex"]

    //通过标签直接生成shape，无需再写shape.xml
//    implementation rootProject.ext.dependencies["background"]
    implementation 'com.noober.background:core:1.3.1'

    //内存泄漏检测
    debugImplementation rootProject.ext.dependencies["canary-debug"]
    releaseImplementation rootProject.ext.dependencies["canary-release"]
//    testImplementation rootProject.ext.dependencies["canary-release"]

    //换肤框架
    api 'skin.support:skin-support:3.1.0-beta1'                   // skin-support 基础控件支持
    api 'skin.support:skin-support-design:3.1.0-beta1'            // skin-support-design material design 控件支持[可选]
    api 'skin.support:skin-support-cardview:3.1.0-beta1'          // skin-support-cardview CardView 控件支持[可选]
    api 'skin.support:skin-support-constraint-layout:3.1.0-beta1' // skin-support-constraint-layout ConstraintLayout 控件支持[可选]

}
