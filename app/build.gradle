apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.butterknife'

android {

    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]
    useLibrary 'org.apache.http.legacy'

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId "com.lanshifu.baselibrary_master"
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        testInstrumentationRunner rootProject.ext.dependencies["androidJUnitRunner"]
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
        //支持dex分包
        multiDexEnabled true
    }
    buildTypes {
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            buildConfigField "boolean", "USE_CANARY", "true"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //修改数据库调试端口
//            resValue("string", "PORT_NUMBER", "9999")
        }

        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            buildConfigField "boolean", "USE_CANARY", "false"
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    signingConfigs {
//        debug {
//            keyAlias '123456'
//            keyPassword '123456'
//            storeFile file("../key.jks")//这里我放在project根目录下，根据路径配置
//            storePassword '123456'
//        }
        release {
            keyAlias '123456'
            keyPassword '123456'
            storeFile file("../key.jks")
            storePassword '123456'
        }
    }

//    productFlavors {//多渠道打包
//        xiaomi { //小米渠道
//            applicationId 'com.lanshifu.baselibrary_master_xiaomi'//个性定制，小米市场包名不同
//            //以下指定编译资源
//            java.srcDirs = ['src/main/java/']
//            res.srcDirs = ['src/main/res']
//            assets.srcDirs = ['assets']
//        }
//        googleplay { //google play 渠道
//            applicationId 'com.lanshifu.baselibrary_master_googleplay'
//        }
//    }


    dexOptions {
        preDexLibraries = false
        //65536
        jumboMode = true
    }

    lintOptions {
        disable 'InvalidPackage'
        disable "ResourceType"
        abortOnError false
    }

    sourceSets {main {res.srcDirs = ['src/main/res', 'src/main/res-night']}}

    //修改输出apk名字
    applicationVariants.all { variant ->
        variant.outputs.all{
            outputFileName = "组件化-${buildType.name}-${defaultConfig.versionName}.apk"
        }
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }

}

dependencies {
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    testCompile 'junit:junit:4.12'
    if (!isBuildModule.toBoolean()) {
        implementation project(":video_module")
        implementation project(":picture_module")
        implementation project(":demo_module")
        implementation project(":wandroid_module")
    } else {
        implementation project(':baselibrary')
        implementation project(":CommonService")
    }

    //tools
    annotationProcessor rootProject.ext.dependencies["arouter-compiler"]
    //butterknife 必须
    annotationProcessor(rootProject.ext.dependencies["butterknife-compiler"]) {
        exclude module: 'support-annotations'
    }


}
